name: Docker Flask API on Windows

on:
  push:
    branches: [ main ]

jobs:
  build-and-run:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t flask-api .

      - name: Run Docker container
        run: docker run -d -p 5000:5000 --name flask-api-container flask-api

      - name: Wait for API to start
        shell: pwsh
        run: |
          $maxRetries = 10
          $i = 0
          do {
            try {
              $resp = Invoke-WebRequest -Uri http://localhost:5000/health -UseBasicParsing -TimeoutSec 3
              if ($resp.StatusCode -eq 200) {
                Write-Host "API is up!"
                break
              }
            } catch {
              Write-Host "Waiting for API to start..."
              Start-Sleep -Seconds 3
            }
            $i++
          } while ($i -lt $maxRetries)
          if ($i -eq $maxRetries) {
            Write-Error "API did not start in time"
            exit 1
          }

      - name: Encode test image to base64
        shell: pwsh
        run: |
          $b64 = [Convert]::ToBase64String([IO.File]::ReadAllBytes("test-data/face.jpg"))
          Write-Host "Encoded image length: $($b64.Length)"
          # Save to environment variable for next step
          echo "IMAGE_B64=$b64" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8

      - name: Test /verify endpoint
        shell: pwsh
        run: |
          $json = @{ user_id = "test"; image = $env:IMAGE_B64 } | ConvertTo-Json
          Write-Host "Sending POST to /verify..."
          $response = Invoke-RestMethod -Uri http://localhost:5000/verify -Method POST -Body $json -ContentType "application/json"
          Write-Host "Response from API:"
          Write-Host $response | ConvertTo-Json -Depth 10

      - name: Stop container
        run: docker stop flask-api-container

      - name: Remove container
        run: docker rm flask-api-container
